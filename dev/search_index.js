var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = DigitalVolumePhaseOnlyCorrelation","category":"page"},{"location":"#DigitalVolumePhaseOnlyCorrelation","page":"Home","title":"DigitalVolumePhaseOnlyCorrelation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for DigitalVolumePhaseOnlyCorrelation.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [DigitalVolumePhaseOnlyCorrelation]","category":"page"},{"location":"#DigitalVolumePhaseOnlyCorrelation.BartlettApodization","page":"Home","title":"DigitalVolumePhaseOnlyCorrelation.BartlettApodization","text":"DigitalVolumePhaseOnlyCorrelation.BartlettApodization(sz; kwargs...)\n\nCreate an apodization function DigitalVolumePhaseOnlyCorrelation.BartlettApodization up to 3 dimensions, with size sz defined as a single Int (1-dimensionnal) or a tuple of  Int.\n\nFor kwargs definitions see bartlett function in package  DSP.jl.\n\nExample\n\njulia> apod = DigitalVolumePhaseOnlyCorrelation.BartlettApodization((4, 4, 4));\n\njulia> A = rand(4, 4, 4);\n\njulia> apod(A)\n4×4×4 Array{Float64, 3}:\n...\n\n\n\n\n\n","category":"type"},{"location":"#DigitalVolumePhaseOnlyCorrelation.BartlettHannApodization","page":"Home","title":"DigitalVolumePhaseOnlyCorrelation.BartlettHannApodization","text":"DigitalVolumePhaseOnlyCorrelation.BartlettHannApodization(sz; kwargs...)\n\nCreate an apodization function DigitalVolumePhaseOnlyCorrelation.BartlettHannApodization up to 3 dimensions, with size sz defined as a single Int (1-dimensionnal) or a tuple of  Int.\n\nFor kwargs definitions see bartlett_hann function in package  DSP.jl.\n\nExample\n\njulia> apod = DigitalVolumePhaseOnlyCorrelation.BartlettHannApodization((4, 4, 4));\n\njulia> A = rand(4, 4, 4);\n\njulia> apod(A)\n4×4×4 Array{Float64, 3}:\n...\n\n\n\n\n\n","category":"type"},{"location":"#DigitalVolumePhaseOnlyCorrelation.BlackmanApodization","page":"Home","title":"DigitalVolumePhaseOnlyCorrelation.BlackmanApodization","text":"DigitalVolumePhaseOnlyCorrelation.BlackmanApodization(sz; kwargs...)\n\nCreate an apodization function DigitalVolumePhaseOnlyCorrelation.BlackmanApodization up to 3 dimensions, with size sz defined as a single Int (1-dimensionnal) or a tuple of  Int.\n\nFor kwargs definitions see blackman function in package  DSP.jl.\n\nExample\n\njulia> apod = DigitalVolumePhaseOnlyCorrelation.BlackmanApodization((4, 4, 4));\n\njulia> A = rand(4, 4, 4);\n\njulia> apod(A)\n4×4×4 Array{Float64, 3}:\n...\n\n\n\n\n\n","category":"type"},{"location":"#DigitalVolumePhaseOnlyCorrelation.CosineApodization","page":"Home","title":"DigitalVolumePhaseOnlyCorrelation.CosineApodization","text":"DigitalVolumePhaseOnlyCorrelation.CosineApodization(sz; kwargs...)\n\nCreate an apodization function DigitalVolumePhaseOnlyCorrelation.CosineApodization up to 3 dimensions, with size sz defined as a single Int (1-dimensionnal) or a tuple of  Int.\n\nFor kwargs definitions see cosine function in package  DSP.jl.\n\nExample\n\njulia> apod = DigitalVolumePhaseOnlyCorrelation.CosineApodization((4, 4, 4));\n\njulia> A = rand(4, 4, 4);\n\njulia> apod(A)\n4×4×4 Array{Float64, 3}:\n...\n\n\n\n\n\n","category":"type"},{"location":"#DigitalVolumePhaseOnlyCorrelation.GaussianApodization","page":"Home","title":"DigitalVolumePhaseOnlyCorrelation.GaussianApodization","text":"DigitalVolumePhaseOnlyCorrelation.GaussianApodization(sz, par; kwargs...)\n\nCreate an apodization function DigitalVolumePhaseOnlyCorrelation.GaussianApodization up to 3 dimensions, with size sz defined as a single Int (1-dimensionnal) or a tuple of  Int.\n\nFor par and kwargs definitions see gaussian function in package  DSP.jl.\n\nExample\n\njulia> apod = DigitalVolumePhaseOnlyCorrelation.GaussianApodization((4, 4, 4), 0.5);\n\njulia> A = rand(4, 4, 4);\n\njulia> apod(A)\n4×4×4 Array{Float64, 3}:\n...\n\n\n\n\n\n","category":"type"},{"location":"#DigitalVolumePhaseOnlyCorrelation.HammingApodization","page":"Home","title":"DigitalVolumePhaseOnlyCorrelation.HammingApodization","text":"DigitalVolumePhaseOnlyCorrelation.HammingApodization(sz; kwargs...)\n\nCreate an apodization function DigitalVolumePhaseOnlyCorrelation.HammingApodization up to 3 dimensions, with size sz defined as a single Int (1-dimensionnal) or a tuple of  Int.\n\nFor kwargs definitions see hamming function in package  DSP.jl.\n\nExample\n\njulia> apod = DigitalVolumePhaseOnlyCorrelation.HammingApodization((4, 4, 4));\n\njulia> A = rand(4, 4, 4);\n\njulia> apod(A)\n4×4×4 Array{Float64, 3}:\n...\n\n\n\n\n\n","category":"type"},{"location":"#DigitalVolumePhaseOnlyCorrelation.HanningApodization","page":"Home","title":"DigitalVolumePhaseOnlyCorrelation.HanningApodization","text":"DigitalVolumePhaseOnlyCorrelation.HanningApodization(sz; kwargs...)\n\nCreate an apodization function DigitalVolumePhaseOnlyCorrelation.HanningApodization up to 3 dimensions, with size sz defined as a single Int (1-dimensionnal) or a tuple of  Int.\n\nFor kwargs definitions see hanning function in package  DSP.jl.\n\nExample\n\njulia> apod = DigitalVolumePhaseOnlyCorrelation.HanningApodization((4, 4, 4));\n\njulia> A = rand(4, 4, 4);\n\njulia> apod(A)\n4×4×4 Array{Float64, 3}:\n...\n\n\n\n\n\n","category":"type"},{"location":"#DigitalVolumePhaseOnlyCorrelation.KaiserApodization","page":"Home","title":"DigitalVolumePhaseOnlyCorrelation.KaiserApodization","text":"DigitalVolumePhaseOnlyCorrelation.KaiserApodization(sz, par; kwargs...)\n\nCreate an apodization function DigitalVolumePhaseOnlyCorrelation.KaiserApodization up to 3 dimensions, with size sz defined as a single Int (1-dimensionnal) or a tuple of  Int.\n\nFor par and kwargs definitions see kaiser function in package  DSP.jl.\n\nExample\n\njulia> apod = DigitalVolumePhaseOnlyCorrelation.KaiserApodization((4, 4, 4), 0.5);\n\njulia> A = rand(4, 4, 4);\n\njulia> apod(A)\n4×4×4 Array{Float64, 3}:\n...\n\n\n\n\n\n","category":"type"},{"location":"#DigitalVolumePhaseOnlyCorrelation.LanczosApodization","page":"Home","title":"DigitalVolumePhaseOnlyCorrelation.LanczosApodization","text":"DigitalVolumePhaseOnlyCorrelation.LanczosApodization(sz; kwargs...)\n\nCreate an apodization function DigitalVolumePhaseOnlyCorrelation.LanczosApodization up to 3 dimensions, with size sz defined as a single Int (1-dimensionnal) or a tuple of  Int.\n\nFor kwargs definitions see lanczos function in package  DSP.jl.\n\nExample\n\njulia> apod = DigitalVolumePhaseOnlyCorrelation.LanczosApodization((4, 4, 4));\n\njulia> A = rand(4, 4, 4);\n\njulia> apod(A)\n4×4×4 Array{Float64, 3}:\n...\n\n\n\n\n\n","category":"type"},{"location":"#DigitalVolumePhaseOnlyCorrelation.RectApodization","page":"Home","title":"DigitalVolumePhaseOnlyCorrelation.RectApodization","text":"DigitalVolumePhaseOnlyCorrelation.RectApodization(sz; kwargs...)\n\nCreate an apodization function DigitalVolumePhaseOnlyCorrelation.RectApodization up to 3 dimensions, with size sz defined as a single Int (1-dimensionnal) or a tuple of  Int.\n\nFor kwargs definitions see rect function in package  DSP.jl.\n\nExample\n\njulia> apod = DigitalVolumePhaseOnlyCorrelation.RectApodization((4, 4, 4));\n\njulia> A = rand(4, 4, 4);\n\njulia> apod(A)\n4×4×4 Array{Float64, 3}:\n...\n\n\n\n\n\n","category":"type"},{"location":"#DigitalVolumePhaseOnlyCorrelation.TriangApodization","page":"Home","title":"DigitalVolumePhaseOnlyCorrelation.TriangApodization","text":"DigitalVolumePhaseOnlyCorrelation.TriangApodization(sz; kwargs...)\n\nCreate an apodization function DigitalVolumePhaseOnlyCorrelation.TriangApodization up to 3 dimensions, with size sz defined as a single Int (1-dimensionnal) or a tuple of  Int.\n\nFor kwargs definitions see triang function in package  DSP.jl.\n\nExample\n\njulia> apod = DigitalVolumePhaseOnlyCorrelation.TriangApodization((4, 4, 4));\n\njulia> A = rand(4, 4, 4);\n\njulia> apod(A)\n4×4×4 Array{Float64, 3}:\n...\n\n\n\n\n\n","category":"type"},{"location":"#DigitalVolumePhaseOnlyCorrelation.TukeyApodization","page":"Home","title":"DigitalVolumePhaseOnlyCorrelation.TukeyApodization","text":"DigitalVolumePhaseOnlyCorrelation.TukeyApodization(sz, par; kwargs...)\n\nCreate an apodization function DigitalVolumePhaseOnlyCorrelation.TukeyApodization up to 3 dimensions, with size sz defined as a single Int (1-dimensionnal) or a tuple of  Int.\n\nFor par and kwargs definitions see tukey function in package  DSP.jl.\n\nExample\n\njulia> apod = DigitalVolumePhaseOnlyCorrelation.TukeyApodization((4, 4, 4), 0.5);\n\njulia> A = rand(4, 4, 4);\n\njulia> apod(A)\n4×4×4 Array{Float64, 3}:\n...\n\n\n\n\n\n","category":"type"},{"location":"#DigitalVolumePhaseOnlyCorrelation.poc-Tuple{Any, Any}","page":"Home","title":"DigitalVolumePhaseOnlyCorrelation.poc","text":"poc(sig1, sig2)\n\n\n\n\n\n","category":"method"}]
}
